"""initial_migration

Revision ID: 0001
Revises: 
Create Date: 2024-12-10 09:41:58.483100

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=True)
    op.create_table('connections',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('status', sa.String(), nullable=True),
                    sa.Column('reason', sa.String(), nullable=True),
                    sa.Column('custom_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.Column('master_id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('locations',
                    sa.Column('latitude', sa.Numeric(), nullable=True),
                    sa.Column('longitude', sa.Numeric(), nullable=True),
                    sa.Column('city', sa.String(), nullable=True),
                    sa.Column('address', sa.String(), nullable=True),
                    sa.Column('master_id', sa.String(length=36), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=True)
    op.create_table('grids',
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('capacity', sa.BigInteger(), nullable=False),
                    sa.Column('unit', sa.String(), nullable=False),
                    sa.Column('supplier', sa.String(), nullable=False),
                    sa.Column('account_id', sa.String(), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('account_id', 'name')
                    )
    op.create_index(op.f('ix_grids_id'), 'grids', ['id'], unique=True)
    op.create_table('charge_points',
                    sa.Column('id', sa.String(length=20), nullable=False),
                    sa.Column('vendor_name', sa.String(), nullable=True),
                    sa.Column('model', sa.String(), nullable=True),
                    sa.Column('serial_number', sa.String(), nullable=True),
                    sa.Column('firmware_version', sa.String(), nullable=True),
                    sa.Column('custom_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.Column('grid_id', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['grid_id'], ['grids.id'], ondelete='SET NULL'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('grid_id', 'id')
                    )
    op.create_table('evses',
                    sa.Column('order_id', sa.SmallInteger(), autoincrement=True, nullable=True),
                    sa.Column('charge_point_id', sa.String(), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['charge_point_id'], ['charge_points.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('order_id', 'charge_point_id'),
                    )
    op.create_index(op.f('ix_evses_id'), 'evses', ['id'], unique=True)
    op.create_table('connectors',
                    sa.Column('order_id', sa.SmallInteger(), autoincrement=True, nullable=True),
                    sa.Column('evse_id', sa.String(), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['evse_id'], ['evses.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('order_id', 'evse_id')
                    )
    op.create_index(op.f('ix_connectors_id'), 'connectors', ['id'], unique=True)
    op.execute("CREATE SEQUENCE evses_id_seq OWNED BY evses.id;")
    op.execute("ALTER TABLE evses ALTER COLUMN order_id SET DEFAULT nextval('evses_id_seq');")
    op.execute("ALTER TABLE evses ALTER COLUMN id DROP DEFAULT;")
    op.execute("CREATE SEQUENCE connectors_id_seq OWNED BY connectors.id;")
    op.execute("ALTER TABLE connectors ALTER COLUMN order_id SET DEFAULT nextval('connectors_id_seq');")
    op.execute("ALTER TABLE connectors ALTER COLUMN id DROP DEFAULT;")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_connectors_id'), table_name='connectors')
    op.drop_table('connectors')
    op.drop_index(op.f('ix_evses_id'), table_name='evses')
    op.drop_table('evses')
    op.drop_table('charge_points')
    op.drop_index(op.f('ix_grids_id'), table_name='grids')
    op.drop_table('grids')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_table('connections')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
