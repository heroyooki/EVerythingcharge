"""added_grids_accounts_and_relations

Revision ID: 0011
Revises: 0010
Create Date: 2024-12-06 09:52:40.756908

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0011'
down_revision = '0010'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=True)
    op.create_table('grids',
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('capacity', sa.BigInteger(), nullable=True),
                    sa.Column('unit', sa.String(), nullable=False),
                    sa.Column('supplier', sa.String(), nullable=False),
                    sa.Column('account_id', sa.String(), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_index(op.f('ix_grids_id'), 'grids', ['id'], unique=True)
    op.drop_index('ix_networks_id', table_name='networks')
    op.add_column('charge_points', sa.Column('grid_id', sa.String(), nullable=False))
    op.drop_index('ix_charge_points_id', table_name='charge_points')
    op.create_unique_constraint(None, 'charge_points', ['grid_id', 'id'])
    op.drop_constraint('charge_points_network_id_fkey', 'charge_points', type_='foreignkey')
    op.drop_table('networks')
    op.create_foreign_key(None, 'charge_points', 'grids', ['grid_id'], ['id'], ondelete='SET NULL')
    op.drop_column('charge_points', 'network_id')
    op.execute("""
        ALTER TABLE configurations
        ALTER COLUMN id TYPE SMALLINT USING id::smallint
    """)
    op.alter_column('configurations', 'id',
                    existing_type=sa.VARCHAR(length=20),
                    type_=sa.SmallInteger(),
                    existing_nullable=False,
                    autoincrement=True)
    op.drop_index('ix_configurations_id', table_name='configurations')
    op.execute("""
        ALTER TABLE connections
        ALTER COLUMN id TYPE SMALLINT USING id::smallint
    """)
    op.alter_column('connections', 'id',
                    existing_type=sa.VARCHAR(length=20),
                    type_=sa.SmallInteger(),
                    existing_nullable=False,
                    autoincrement=True)
    op.drop_index('ix_connections_id', table_name='connections')
    op.execute("""
        ALTER TABLE connectors
        ALTER COLUMN id TYPE SMALLINT USING id::smallint
    """)
    op.alter_column('connectors', 'id',
                    existing_type=sa.INTEGER(),
                    type_=sa.SmallInteger(),
                    existing_nullable=False)
    op.alter_column('users', 'id',
                    existing_type=sa.VARCHAR(length=20),
                    type_=sa.String(length=36),
                    existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
                    existing_type=sa.String(length=36),
                    type_=sa.VARCHAR(length=20),
                    existing_nullable=False)
    op.alter_column('connectors', 'id',
                    existing_type=sa.SmallInteger(),
                    type_=sa.INTEGER(),
                    existing_nullable=False)
    op.create_index('ix_connections_id', 'connections', ['id'], unique=False)
    op.alter_column('connections', 'id',
                    existing_type=sa.SmallInteger(),
                    type_=sa.VARCHAR(length=20),
                    existing_nullable=False,
                    autoincrement=True)
    op.create_index('ix_configurations_id', 'configurations', ['id'], unique=False)
    op.alter_column('configurations', 'id',
                    existing_type=sa.SmallInteger(),
                    type_=sa.VARCHAR(length=20),
                    existing_nullable=False,
                    autoincrement=True)
    op.add_column('charge_points', sa.Column('network_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'charge_points', type_='foreignkey')
    op.create_foreign_key('charge_points_network_id_fkey', 'charge_points', 'networks', ['network_id'], ['id'])
    op.drop_constraint(None, 'charge_points', type_='unique')
    op.create_index('ix_charge_points_id', 'charge_points', ['id'], unique=False)
    op.drop_column('charge_points', 'grid_id')
    op.create_table('networks',
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
                    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
                    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='networks_pkey'),
                    sa.UniqueConstraint('name', name='networks_name_key')
                    )
    op.create_index('ix_networks_id', 'networks', ['id'], unique=False)
    op.drop_index(op.f('ix_grids_id'), table_name='grids')
    op.drop_table('grids')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###
